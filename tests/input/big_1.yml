---
# each layer can encode objects which have dependencies
# on lower ranked layers only
measure-duration: 2.0         # 2s = 1 bar at 120bpm (though we don't *do* bpm)
layers:
  - rank: 1                   # all static anchors should live here
    children:
      - entity: anchor           # for circle origin
        id: p0
        coords: [300, 600]    # TL = [0,0]
      - entity: anchor
        id: p1
        coords: [1100, 200]
      - entity: anchor
        id: p2
        coords: [1150, 500]
      - entity: anchor
        id: p3
        coords: [700, 700]
      - entity: anchor
        id: p4
        coords: [1400, 700]
      - entity: anchor
        id: p5
        coords: [700, 1000]
      - entity: anchor
        id: p6
        coords: [1400, 1000]
      - entity: anchor           # for polyline
        id: p7
        coords: [650, 950]
      - entity: anchor
        id: p8
        coords: [1400, 850]
  - rank: 2
    children:
      - entity: circle
        id: c1
        centre: p0
        radius: 250
        orientation: 0
        # rotation-speed: 0 - no let's implement as point progression            # rpm (not radians?)
      - entity: circle
        id: c2
        centre: p0
        radius: 150
        orientation: 0
      - entity: line
        id: l1
        parents:
          - p3
          - p4
      - entity: line
        id: l2
        parents:
          - p5
          - p6
      - entity: line
        id: l3
        parents:
          - p1
          - p2
  - rank: 3
    children:
      - entity: slider
        id: p10
        parent: c2
        progression: 0.9
        velocity: 1.0
        loop: true
      - entity: slider
        id: p11
        parent: l1
        progression: 0.0
        velocity: 0.125
      - entity: slider
        id: p12
        parent: l2
        progression: 0.0
        velocity: 0.125
  - rank: 4
    children:
      - entity: line
        id: l4
        parents:
          - p2
          - p10
      - entity: line
        id: l5
        parents:
          - p11
          - p12
  - rank: 5
    children:
      - entity: intersection
        id: i2
        parents:
          - c1
          - l4
  - rank: 6
    children:
      - entity: distance
        id: dist2
        parents:
          - p2
          - p10
      - entity: angle
        id: ang1
        parents:                          # specified clockwise
          - l4
          - l3
  - rank: 7
    children:
#      - entity: control                     # msg sent at global clock rate (configure this?)
#        id: ctrl1
#        path: "/filter/cutoff/"
#        data:
#          - "in_1 * 0.2"  # can evaluate simple expressions using https://github.com/AxiaCore/py-expression-eval/
#        connections:
#          in_1: ang1
#        coords: [1050, 700]
      - entity: control
        id: ctrl2
        path: "/note/pitch/"
        data:
          - "in_1 / 10"
        connections:
          in_1: dist2
        coords: [750, 200]
